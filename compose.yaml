services:

  backend:
    build:
      context: . # Construit l'image à partir de la racine du projet
      dockerfile: Dockerfile.backend # Utilise le Dockerfile dédié au backend
    container_name: symfony_api # Nom du conteneur
    ports:
      - "8000:8000" # Expose le port 8000 pour accéder à l'API
    volumes:
      - .:/app
      - /app/vendor
      - ./config/jwt:/app/config/jwt # Ajout du volume pour partager les clés JWT

    depends_on:
      - database

    environment:
      DATABASE_URL: mysql://user:mgp_p4ssW0rd!@database:3306/db_mgp


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: frontend_vue
    restart: unless-stopped
    ports:
        - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    entrypoint: ["npm", "run", "dev"]



  ###> doctrine/doctrine-bundle ###
  database:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: db_mgp
      MYSQL_USER: user
      MYSQL_PASSWORD: mgp_p4ssW0rd!
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3306:3306"
    volumes:
      - database_data:/var/lib/mysql
###< doctrine/doctrine-bundle ###

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Interface web
    restart: unless-stopped

volumes:
  ###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###

networks:
  default:
    driver: bridge
